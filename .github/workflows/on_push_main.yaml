name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .editorconfig

env:
  AWS_REGION: us-east-1
  NODE_ENV: production
  TF_VERSION: latest

jobs:
  default:
    name: Build and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    environment:
      name: production
      url: https://mr.codermarcos.zone/

    steps:
      - uses: actions/checkout@v5

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/cache@v4
        id: terraform-cache
        with:
          path: ./iac/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('./iac/terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.13.2"

      - name: Deploy
        working-directory: ./iac
        run: |
          terraform init
          terraform apply -auto-approve
