name: Build and deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .github/workflows/on_push_main.yaml

env:
  NODE_ENV: production
  AWS_REGION: us-east-1
  TF_VERSION: latest
  TG_VERSION: v0.31.8
  TF_WORKING_DIR: iac

jobs:
  default:
    name: Build and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    environment:
      name: production
      url: https://mr.codermarcos.zone/

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build
        run: npm run build

      - name: Init deploy
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_comment: false
          tf_actions_version: ${{ env.TF_VERSION }}
          tg_actions_version: ${{ env.TG_VERSION }}
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_subcommand: init
          args: --terragrunt-non-interactive

      - name: Plan deploy
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_comment: true
          tf_actions_version: ${{ env.TF_VERSION }}
          tg_actions_version: ${{ env.TG_VERSION }}
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_subcommand: plan
          args: -out=tfplan --terragrunt-non-interactive

      - name: Apply deploy
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_comment: false
          tf_actions_version: ${{ env.TF_VERSION }}
          tg_actions_version: ${{ env.TG_VERSION }}
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_subcommand: apply
          args: --terragrunt-non-interactive tfplan
